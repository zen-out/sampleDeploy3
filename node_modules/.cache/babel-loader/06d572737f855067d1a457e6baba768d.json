{"ast":null,"code":"import { createAction, createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"redaxios\";\nconst URL = \"http://localhost:8080\";\nexport const projectSlice = createSlice({\n  name: \"projects\",\n  initialState: {\n    projects: [],\n    currentProject: {},\n    message: \"\",\n    loading: false\n  },\n  reducers: {\n    getProjects: (state, action) => {\n      state.projects = action.payload;\n    },\n    // pass in the id\n    getOneProject: (state, action) => {\n      state.currentProject = action.payload;\n    },\n    loadingProject: (state, action) => {\n      state.loading = action.payload;\n    },\n    projectError: (state, action) => {\n      state.message = action.payload;\n    }\n  }\n});\nexport const {\n  getProjects,\n  getOneProject,\n  loadingProject,\n  projectError\n} = projectSlice.actions;\nexport function GetProjectsThunk() {\n  return dispatch => {\n    axios.get(URL + \"/api/projects\").then(response => {\n      let data = response.data;\n      console.log(\"getting projects thunk\", data); // dispatch(getProjects(data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(projectError(error));\n    });\n  };\n}\n_c = GetProjectsThunk;\nexport function GetOneProjectThunk(id) {\n  return dispatch => {\n    axios.get(`${URL}/api/projects/${id}`).then(response => {\n      let data = response.data;\n      console.log(\"GRABBING PROJECT IN THUNK\", data); //   dispatch(getOneProject(data))\n    }).catch(error => {\n      console.log(error);\n      dispatch(projectError(error));\n    });\n  };\n}\n_c2 = GetOneProjectThunk;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetProjectsThunk\");\n$RefreshReg$(_c2, \"GetOneProjectThunk\");","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/portfolio/src/redux/projects.js"],"names":["createAction","createSlice","createAsyncThunk","axios","URL","projectSlice","name","initialState","projects","currentProject","message","loading","reducers","getProjects","state","action","payload","getOneProject","loadingProject","projectError","actions","GetProjectsThunk","dispatch","get","then","response","data","console","log","catch","error","GetOneProjectThunk","id"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AACA,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AACtCK,EAAAA,IAAI,EAAE,UADgC;AAEtCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,cAAc,EAAE,EAFJ;AAGZC,IAAAA,OAAO,EAAE,EAHG;AAIZC,IAAAA,OAAO,EAAE;AAJG,GAFwB;AAStCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;AACD,KAHO;AAIR;AACAC,IAAAA,aAAa,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACL,cAAN,GAAuBM,MAAM,CAACC,OAA9B;AACD,KAPO;AAQRE,IAAAA,cAAc,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACC,OAAvB;AACD,KAVO;AAWRG,IAAAA,YAAY,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACC,OAAvB;AACD;AAbO;AAT4B,CAAD,CAAhC;AA0BP,OAAO,MAAM;AACXH,EAAAA,WADW;AAEXI,EAAAA,aAFW;AAGXC,EAAAA,cAHW;AAIXC,EAAAA;AAJW,IAKTd,YAAY,CAACe,OALV;AAOP,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAQC,QAAD,IAAc;AACnBnB,IAAAA,KAAK,CACFoB,GADH,CACOnB,GAAG,GAAG,eADb,EAEGoB,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,IAAtC,EAFkB,CAGlB;AACD,KANH,EAOGG,KAPH,CAOUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAR,MAAAA,QAAQ,CAACH,YAAY,CAACW,KAAD,CAAb,CAAR;AACD,KAVH;AAWD,GAZD;AAaD;KAdeT,gB;AAgBhB,OAAO,SAASU,kBAAT,CAA4BC,EAA5B,EAAgC;AACrC,SAAQV,QAAD,IAAc;AACnBnB,IAAAA,KAAK,CACFoB,GADH,CACQ,GAAEnB,GAAI,iBAAgB4B,EAAG,EADjC,EAEGR,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,IAAzC,EAFkB,CAGlB;AACD,KANH,EAOGG,KAPH,CAOUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAR,MAAAA,QAAQ,CAACH,YAAY,CAACW,KAAD,CAAb,CAAR;AACD,KAVH;AAWD,GAZD;AAaD;MAdeC,kB","sourcesContent":["import {\n  createAction,\n  createSlice,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport axios from \"redaxios\";\n\nconst URL = \"http://localhost:8080\";\nexport const projectSlice = createSlice({\n  name: \"projects\",\n  initialState: {\n    projects: [],\n    currentProject: {},\n    message: \"\",\n    loading: false,\n  },\n\n  reducers: {\n    getProjects: (state, action) => {\n      state.projects = action.payload;\n    },\n    // pass in the id\n    getOneProject: (state, action) => {\n      state.currentProject = action.payload;\n    },\n    loadingProject: (state, action) => {\n      state.loading = action.payload;\n    },\n    projectError: (state, action) => {\n      state.message = action.payload;\n    },\n  },\n});\n\nexport const {\n  getProjects,\n  getOneProject,\n  loadingProject,\n  projectError,\n} = projectSlice.actions;\n\nexport function GetProjectsThunk() {\n  return (dispatch) => {\n    axios\n      .get(URL + \"/api/projects\")\n      .then((response) => {\n        let data = response.data;\n        console.log(\"getting projects thunk\", data);\n        // dispatch(getProjects(data));\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch(projectError(error));\n      });\n  };\n}\n\nexport function GetOneProjectThunk(id) {\n  return (dispatch) => {\n    axios\n      .get(`${URL}/api/projects/${id}`)\n      .then((response) => {\n        let data = response.data;\n        console.log(\"GRABBING PROJECT IN THUNK\", data);\n        //   dispatch(getOneProject(data))\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch(projectError(error));\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}