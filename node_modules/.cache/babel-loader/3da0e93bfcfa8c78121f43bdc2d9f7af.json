{"ast":null,"code":"export default (function e(t) {\n  function r(e, t, n) {\n    var a,\n        o = {};\n    if (Array.isArray(e)) return e.concat(t);\n\n    for (a in e) o[n ? a.toLowerCase() : a] = e[a];\n\n    for (a in t) {\n      var i = n ? a.toLowerCase() : a,\n          u = t[a];\n      o[i] = i in o && \"object\" == typeof u ? r(o[i], u, \"headers\" === i) : u;\n    }\n\n    return o;\n  }\n\n  function n(e, n, a, o) {\n    \"string\" != typeof e && (e = (n = e).url);\n    var i = {\n      config: n\n    },\n        u = r(t, n),\n        s = {},\n        c = o || u.data;\n    (u.transformRequest || []).map(function (e) {\n      c = e(c, u.headers) || c;\n    }), c && \"object\" == typeof c && \"function\" != typeof c.append && (c = JSON.stringify(c), s[\"content-type\"] = \"application/json\");\n    var f = \"undefined\" != typeof document && document.cookie.match(RegExp(\"(^|; )\" + u.xsrfCookieName + \"=([^;]*)\"));\n\n    if (f && (s[u.xsrfHeaderName] = f[2]), u.auth && (s.authorization = u.auth), u.baseURL && (e = e.replace(/^(?!.*\\/\\/)\\/?(.*)$/, u.baseURL + \"/$1\")), u.params) {\n      var p = ~e.indexOf(\"?\") ? \"&\" : \"?\";\n      e += p + (u.paramsSerializer ? u.paramsSerializer(u.params) : new URLSearchParams(u.params));\n    }\n\n    return (u.fetch || fetch)(e, {\n      method: a || u.method,\n      body: c,\n      headers: r(u.headers, s, !0),\n      credentials: u.withCredentials ? \"include\" : \"same-origin\"\n    }).then(function (e) {\n      for (var t in e) \"function\" != typeof e[t] && (i[t] = e[t]);\n\n      var r = u.validateStatus ? u.validateStatus(e.status) : e.ok;\n      return \"stream\" == u.responseType ? (i.data = e.body, i) : e[u.responseType || \"text\"]().then(function (e) {\n        i.data = e, i.data = JSON.parse(e);\n      }).catch(Object).then(function () {\n        return r ? i : Promise.reject(i);\n      });\n    });\n  }\n\n  return t = t || {}, n.request = n, n.get = function (e, t) {\n    return n(e, t, \"get\");\n  }, n.delete = function (e, t) {\n    return n(e, t, \"delete\");\n  }, n.head = function (e, t) {\n    return n(e, t, \"head\");\n  }, n.options = function (e, t) {\n    return n(e, t, \"options\");\n  }, n.post = function (e, t, r) {\n    return n(e, r, \"post\", t);\n  }, n.put = function (e, t, r) {\n    return n(e, r, \"put\", t);\n  }, n.patch = function (e, t, r) {\n    return n(e, r, \"patch\", t);\n  }, n.all = Promise.all.bind(Promise), n.spread = function (e) {\n    return function (t) {\n      return e.apply(this, t);\n    };\n  }, n.CancelToken = \"function\" == typeof AbortController ? AbortController : Object, n.defaults = t, n.create = e, n;\n})();","map":{"version":3,"sources":["../src/index.js"],"names":["create","defaults","redaxios","request","get","url","config","delete","head","options","post","data","put","patch","all","Promise","bind","spread","fn","results","apply","this","deepMerge","opts","overrides","lowerCase","out","i","Array","isArray","concat","toLowerCase","key","value","_method","_data","response","customHeaders","transformRequest","map","f","headers","append","JSON","stringify","m","document","cookie","match","RegExp","xsrfCookieName","xsrfHeaderName","auth","authorization","baseURL","replace","params","divider","indexOf","paramsSerializer","URLSearchParams","fetch","method","body","credentials","withCredentials","then","res","const","ok","validateStatus","status","responseType","parse","catch","Object","reject","CancelToken","AbortController"],"mappings":"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","sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @public\n * @typedef Options\n * @property {string} [url] the URL to request\n * @property {'get'|'post'|'put'|'patch'|'delete'|'options'|'head'|'GET'|'POST'|'PUT'|'PATCH'|'DELETE'|'OPTIONS'|'HEAD'} [method=\"get\"] HTTP method, case-insensitive\n * @property {Headers} [headers] Request headers\n * @property {FormData|string|object} [body] a body, optionally encoded, to send\n * @property {'text'|'json'|'stream'|'blob'|'arrayBuffer'|'formData'|'stream'} [responseType=\"json\"] An encoding to use for the response\n * @property {Record<string,any>|URLSearchParams} [params] querystring parameters\n * @property {(params: Options['params']) => string} [paramsSerializer] custom function to stringify querystring parameters\n * @property {boolean} [withCredentials] Send the request with credentials like cookies\n * @property {string} [auth] Authorization header value to send with the request\n * @property {string} [xsrfCookieName] Pass an Cross-site Request Forgery prevention cookie value as a header defined by `xsrfHeaderName`\n * @property {string} [xsrfHeaderName] The name of a header to use for passing XSRF cookies\n * @property {(status: number) => boolean} [validateStatus] Override status code handling (default: 200-399 is a success)\n * @property {Array<(body: any, headers: Headers) => any?>} [transformRequest] An array of transformations to apply to the outgoing request\n * @property {string} [baseURL] a base URL from which to resolve all URLs\n * @property {typeof window.fetch} [fetch] Custom window.fetch implementation\n * @property {any} [data]\n */\n\n/**\n * @public\n * @typedef Headers\n * @type {{[name: string]: string}}\n */\n\n/**\n * @public\n * @template T\n * @typedef Response\n * @property {number} status\n * @property {string} statusText\n * @property {Options} config the request configuration\n * @property {T} data the decoded response body\n * @property {Headers} headers\n * @property {boolean} redirect\n * @property {string} url\n * @property {ResponseType} type\n * @property {ReadableStream<Uint8Array> | null} body\n * @property {boolean} bodyUsed\n */\n\n/**\n * @typedef BodylessMethod\n * @type {<T=any>(url: string, config?: Options) => Promise<Response<T>>}\n */\n\n/**\n * @typedef BodyMethod\n * @type {<T=any>(url: string, body?: any, config?: Options) => Promise<Response<T>>}\n */\n\n/** */\nexport default (function create(/** @type {Options} */ defaults) {\n\tdefaults = defaults || {};\n\n\t/**\n\t * @public\n\t * @template T\n\t * @type {(<T = any>(config?: Options) => Promise<Response<T>>) | (<T = any>(url: string, config?: Options) => Promise<Response<T>>)}\n\t */\n\tredaxios.request = redaxios;\n\n\t/** @public @type {BodylessMethod} */\n\tredaxios.get = (url, config) => redaxios(url, config, 'get');\n\n\t/** @public @type {BodylessMethod} */\n\tredaxios.delete = (url, config) => redaxios(url, config, 'delete');\n\n\t/** @public @type {BodylessMethod} */\n\tredaxios.head = (url, config) => redaxios(url, config, 'head');\n\n\t/** @public @type {BodylessMethod} */\n\tredaxios.options = (url, config) => redaxios(url, config, 'options');\n\n\t/** @public @type {BodyMethod} */\n\tredaxios.post = (url, data, config) => redaxios(url, config, 'post', data);\n\n\t/** @public @type {BodyMethod} */\n\tredaxios.put = (url, data, config) => redaxios(url, config, 'put', data);\n\n\t/** @public @type {BodyMethod} */\n\tredaxios.patch = (url, data, config) => redaxios(url, config, 'patch', data);\n\n\t/** @public */\n\tredaxios.all = Promise.all.bind(Promise);\n\n\t/**\n\t * @public\n\t * @template Args, R\n\t * @param {(...args: Args[]) => R} fn\n\t * @returns {(array: Args[]) => R}\n\t */\n\tredaxios.spread = function (fn) {\n\t\treturn function (results) {\n\t\t\treturn fn.apply(this, results);\n\t\t};\n\t};\n\t// 3b smaller:\n\t// redaxios.spread = (fn) => /** @type {any} */ (fn.apply.bind(fn, fn));\n\n\t/**\n\t * @private\n\t * @param {Record<string,any>} opts\n\t * @param {Record<string,any>} [overrides]\n\t * @param {boolean} [lowerCase]\n\t * @returns {Partial<opts>}\n\t */\n\tfunction deepMerge(opts, overrides, lowerCase) {\n\t\tlet out = {},\n\t\t\ti;\n\t\tif (Array.isArray(opts)) {\n\t\t\treturn opts.concat(overrides);\n\t\t}\n\t\tfor (i in opts) {\n\t\t\tconst key = lowerCase ? i.toLowerCase() : i;\n\t\t\tout[key] = opts[i];\n\t\t}\n\t\tfor (i in overrides) {\n\t\t\tconst key = lowerCase ? i.toLowerCase() : i;\n\t\t\tconst value = /** @type {any} */ (overrides)[i];\n\t\t\tout[key] = key in out && typeof value == 'object' ? deepMerge(out[key], value, key === 'headers') : value;\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t * Issues a request.\n\t * @public\n\t * @template T\n\t * @param {string | Options} url\n\t * @param {Options} [config]\n\t * @param {any} [_method]\n\t * @param {any} [_data]\n\t * @returns {Promise<Response<T>>}\n\t */\n\tfunction redaxios(url, config, _method, _data) {\n\t\tif (typeof url !== 'string') {\n\t\t\tconfig = url;\n\t\t\turl = config.url;\n\t\t}\n\n\t\tconst response = /** @type {Response<any>} */ ({ config });\n\n\t\t/** @type {Options} */\n\t\tconst options = deepMerge(defaults, config);\n\n\t\t/** @type {Headers} */\n\t\tconst customHeaders = {};\n\n\t\tlet data = _data || options.data;\n\n\t\t(options.transformRequest || []).map((f) => {\n\t\t\tdata = f(data, options.headers) || data;\n\t\t});\n\n\t\tif (data && typeof data === 'object' && typeof data.append !== 'function') {\n\t\t\tdata = JSON.stringify(data);\n\t\t\tcustomHeaders['content-type'] = 'application/json';\n\t\t}\n\n\t\tconst m =\n\t\t\ttypeof document !== 'undefined' && document.cookie.match(RegExp('(^|; )' + options.xsrfCookieName + '=([^;]*)'));\n\t\tif (m) customHeaders[options.xsrfHeaderName] = m[2];\n\n\t\tif (options.auth) {\n\t\t\tcustomHeaders.authorization = options.auth;\n\t\t}\n\n\t\tif (options.baseURL) {\n\t\t\turl = url.replace(/^(?!.*\\/\\/)\\/?(.*)$/, options.baseURL + '/$1');\n\t\t}\n\n\t\tif (options.params) {\n\t\t\tconst divider = ~url.indexOf('?') ? '&' : '?';\n\t\t\tconst query = options.paramsSerializer\n\t\t\t\t? options.paramsSerializer(options.params)\n\t\t\t\t: new URLSearchParams(options.params);\n\t\t\turl += divider + query;\n\t\t}\n\n\t\tconst fetchFunc = options.fetch || fetch;\n\n\t\treturn fetchFunc(url, {\n\t\t\tmethod: _method || options.method,\n\t\t\tbody: data,\n\t\t\theaders: deepMerge(options.headers, customHeaders, true),\n\t\t\tcredentials: options.withCredentials ? 'include' : 'same-origin'\n\t\t}).then((res) => {\n\t\t\tfor (const i in res) {\n\t\t\t\tif (typeof res[i] != 'function') response[i] = res[i];\n\t\t\t}\n\n\t\t\tconst ok = options.validateStatus ? options.validateStatus(res.status) : res.ok;\n\n\t\t\tif (options.responseType == 'stream') {\n\t\t\t\tresponse.data = res.body;\n\t\t\t\treturn response;\n\t\t\t}\n\n\t\t\treturn res[options.responseType || 'text']()\n\t\t\t\t.then((data) => {\n\t\t\t\t\tresponse.data = data;\n\t\t\t\t\t// its okay if this fails: response.data will be the unparsed value:\n\t\t\t\t\tresponse.data = JSON.parse(data);\n\t\t\t\t})\n\t\t\t\t.catch(Object)\n\t\t\t\t.then(() => (ok ? response : Promise.reject(response)));\n\t\t});\n\t}\n\n\t/**\n\t * @public\n\t * @type {AbortController}\n\t */\n\tredaxios.CancelToken = /** @type {any} */ (typeof AbortController == 'function' ? AbortController : Object);\n\n\t/**\n\t * @public\n\t * @type {Options}\n\t */\n\tredaxios.defaults = defaults;\n\n\t/**\n\t * @public\n\t */\n\tredaxios.create = create;\n\n\treturn redaxios;\n})();\n"]},"metadata":{},"sourceType":"module"}