{"ast":null,"code":"var _jsxFileName = \"/Users/lesleycheung/Desktop/portfolio/frontend/src/components/ResumeList.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n/**********************************************\n * Resume List Component\n * ==================================\n * This component accepts an array of objects, rendering out each object (including the navbar react link)\n * We gave it a function, and then rendered it inside the return block\n ***********************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TestAccordian() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion\",\n    id: \"accordionPanelsStayOpenExample\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"accordion-header\",\n        id: \"panelsStayOpen-headingOne\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accordion-button\",\n          type: \"button\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#panelsStayOpen-collapseOne\",\n          \"aria-expanded\": \"true\",\n          \"aria-controls\": \"panelsStayOpen-collapseOne\",\n          children: \"Accordion Item #1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"panelsStayOpen-collapseOne\",\n        className: \"accordion-collapse collapse show\",\n        \"aria-labelledby\": \"panelsStayOpen-headingOne\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the first item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), \" \", \"It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"accordion-header\",\n        id: \"panelsStayOpen-headingTwo\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accordion-button collapsed\",\n          type: \"button\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#panelsStayOpen-collapseTwo\",\n          \"aria-expanded\": \"false\",\n          \"aria-controls\": \"panelsStayOpen-collapseTwo\",\n          children: \"Accordion Item #2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"panelsStayOpen-collapseTwo\",\n        className: \"accordion-collapse collapse\",\n        \"aria-labelledby\": \"panelsStayOpen-headingTwo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the second item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \" \", \"It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"accordion-header\",\n        id: \"panelsStayOpen-headingThree\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accordion-button collapsed\",\n          type: \"button\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#panelsStayOpen-collapseThree\",\n          \"aria-expanded\": \"false\",\n          \"aria-controls\": \"panelsStayOpen-collapseThree\",\n          children: \"Accordion Item #3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"panelsStayOpen-collapseThree\",\n        className: \"accordion-collapse collapse\",\n        \"aria-labelledby\": \"panelsStayOpen-headingThree\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the third item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), \" \", \"It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TestAccordian;\n\nfunction ResumeList(props) {\n  function renderResumes() {\n    return props.resumes.map((resume, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"accordion-header\",\n            id: \"panelsStayOpen-headingTwo\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accordion-button collapsed\",\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#panelsStayOpen-collapseTwo\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"panelsStayOpen-collapseTwo\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6 align-items-start\",\n                  children: resume.institution\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: resume.institution\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"panelsStayOpen-collapseTwo\",\n            className: \"accordion-collapse collapse\",\n            \"aria-labelledby\": \"panelsStayOpen-headingTwo\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the second item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), \" \", \"It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), resume.institution, resume.position]\n      }, resume.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"resume List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestAccordian, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), renderResumes()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ResumeList;\nexport default ResumeList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TestAccordian\");\n$RefreshReg$(_c2, \"ResumeList\");","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/portfolio/frontend/src/components/ResumeList.js"],"names":["React","Link","TestAccordian","ResumeList","props","renderResumes","resumes","map","resume","index","institution","position","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**********************************************\n * Resume List Component\n * ==================================\n * This component accepts an array of objects, rendering out each object (including the navbar react link)\n * We gave it a function, and then rendered it inside the return block\n ***********************************************/\n\nfunction TestAccordian() {\n  return (\n    <div\n      className=\"accordion\"\n      id=\"accordionPanelsStayOpenExample\"\n    >\n      <div className=\"accordion-item\">\n        <h2\n          className=\"accordion-header\"\n          id=\"panelsStayOpen-headingOne\"\n        >\n          <button\n            className=\"accordion-button\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#panelsStayOpen-collapseOne\"\n            aria-expanded=\"true\"\n            aria-controls=\"panelsStayOpen-collapseOne\"\n          >\n            Accordion Item #1\n          </button>\n        </h2>\n        <div\n          id=\"panelsStayOpen-collapseOne\"\n          className=\"accordion-collapse collapse show\"\n          aria-labelledby=\"panelsStayOpen-headingOne\"\n        >\n          <div className=\"accordion-body\">\n            <strong>\n              This is the first item's accordion body.\n            </strong>{\" \"}\n            It is shown by default, until the collapse\n            plugin adds the appropriate classNamees that we\n            use to style each element. These classNamees\n            control the overall appearance, as well as the\n            showing and hiding via CSS transitions. You can\n            modify any of this with custom CSS or overriding\n            our default variables. It's also worth noting\n            that just about any HTML can go within the{\" \"}\n            <code>.accordion-body</code>, though the\n            transition does limit overflow.\n          </div>\n        </div>\n      </div>\n      <div className=\"accordion-item\">\n        <h2\n          className=\"accordion-header\"\n          id=\"panelsStayOpen-headingTwo\"\n        >\n          <button\n            className=\"accordion-button collapsed\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#panelsStayOpen-collapseTwo\"\n            aria-expanded=\"false\"\n            aria-controls=\"panelsStayOpen-collapseTwo\"\n          >\n            Accordion Item #2\n          </button>\n        </h2>\n        <div\n          id=\"panelsStayOpen-collapseTwo\"\n          className=\"accordion-collapse collapse\"\n          aria-labelledby=\"panelsStayOpen-headingTwo\"\n        >\n          <div className=\"accordion-body\">\n            <strong>\n              This is the second item's accordion body.\n            </strong>{\" \"}\n            It is hidden by default, until the collapse\n            plugin adds the appropriate classNamees that we\n            use to style each element. These classNamees\n            control the overall appearance, as well as the\n            showing and hiding via CSS transitions. You can\n            modify any of this with custom CSS or overriding\n            our default variables. It's also worth noting\n            that just about any HTML can go within the{\" \"}\n            <code>.accordion-body</code>, though the\n            transition does limit overflow.\n          </div>\n        </div>\n      </div>\n      <div className=\"accordion-item\">\n        <h2\n          className=\"accordion-header\"\n          id=\"panelsStayOpen-headingThree\"\n        >\n          <button\n            className=\"accordion-button collapsed\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#panelsStayOpen-collapseThree\"\n            aria-expanded=\"false\"\n            aria-controls=\"panelsStayOpen-collapseThree\"\n          >\n            Accordion Item #3\n          </button>\n        </h2>\n        <div\n          id=\"panelsStayOpen-collapseThree\"\n          className=\"accordion-collapse collapse\"\n          aria-labelledby=\"panelsStayOpen-headingThree\"\n        >\n          <div className=\"accordion-body\">\n            <strong>\n              This is the third item's accordion body.\n            </strong>{\" \"}\n            It is hidden by default, until the collapse\n            plugin adds the appropriate classNamees that we\n            use to style each element. These classNamees\n            control the overall appearance, as well as the\n            showing and hiding via CSS transitions. You can\n            modify any of this with custom CSS or overriding\n            our default variables. It's also worth noting\n            that just about any HTML can go within the{\" \"}\n            <code>.accordion-body</code>, though the\n            transition does limit overflow.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ResumeList(props) {\n  function renderResumes() {\n    return props.resumes.map((resume, index) => {\n      return (\n        <li key={resume.id}>\n          <div className=\"accordion-item\">\n            <h2\n              className=\"accordion-header\"\n              id=\"panelsStayOpen-headingTwo\"\n            >\n              <button\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#panelsStayOpen-collapseTwo\"\n                aria-expanded=\"false\"\n                aria-controls=\"panelsStayOpen-collapseTwo\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-6 align-items-start\">\n                    {resume.institution}\n                  </div>\n                  <div className=\"col-6\">\n                    {resume.institution}\n                  </div>\n                </div>\n              </button>\n            </h2>\n            <div\n              id=\"panelsStayOpen-collapseTwo\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"panelsStayOpen-headingTwo\"\n            >\n              <div className=\"accordion-body\">\n                <strong>\n                  This is the second item's accordion body.\n                </strong>{\" \"}\n                It is hidden by default, until the collapse\n                plugin adds the appropriate classNamees that\n                we use to style each element. These\n                classNamees control the overall appearance,\n                as well as the showing and hiding via CSS\n                transitions. You can modify any of this with\n                custom CSS or overriding our default\n                variables. It's also worth noting that just\n                about any HTML can go within the{\" \"}\n                <code>.accordion-body</code>, though the\n                transition does limit overflow.\n              </div>\n            </div>\n          </div>\n          <br />\n          {resume.institution}\n          {resume.position}\n        </li>\n      );\n    });\n  }\n  return (\n    <div>\n      <h3>resume List</h3>\n      <TestAccordian />\n      {renderResumes()}\n    </div>\n  );\n}\n\nexport default ResumeList;\n"]},"metadata":{},"sourceType":"module"}